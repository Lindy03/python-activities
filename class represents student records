# Define a class represent student records individually
class StudentRecord:
    def __init__(self, student_number, last_name, first_name, gender, mark):
        self.student_number = student_number
        self.last_name = last_name
        self.first_name = first_name
        self.gender = gender
        self.mark = mark
        self.level = self.calculate_level()

    def calculate_level(self):
        # This function determines the level achieved based on mark obtained
        if 80 <= self.mark <= 100:
            return "Level 7"
        elif 70 <= self.mark <= 79:
            return "Level 6"
        elif 60 <= self.mark <= 69:
            return "Level 5"
        elif 50 <= self.mark <= 59:
            return "Level 4"
        elif 40 <= self.mark <= 49:
            return "Level 3"
        elif 30 <= self.mark <= 39:
            return "Level 2"
        elif 0 <= self.mark <= 29:
            return "Level 1"
        else:
            return "Invalid Mark"

    def print_record(self):
        # The format is which student records will be displayed
        print(f"{self.student_number}\t{self.last_name}\t{self.first_name}\t{self.gender}\t{self.mark}\t{self.level}")

# A class defined to read student records from the file
class StudentRecordsReader:
    def __init__(self, file_path):
        self.file_path = file_path
        self.file = None

    def open_file(self):        # Open the file for reading
        self.file = open(self.file_path, 'r')

    def close_file(self):             # Close the file when done reading
        if self.file:
            self.file.close()

    def get_all_records(self):          #read all records from list and return
        records_list = []
        while True:
            record_data = self.get_record_data()
            if record_data is None:
                break
            records_list.append(record_data)
        return records_list

    def get_record_data(self):
        # Read a single line from the file and convert to student reord object
        line = self.file.readline().strip()
        if not line:
            return None
        data = line.split()
        return StudentRecord(int(data[0]), data[1], data[2], data[3], int(data[4]))

# Defining the main function to run the program
def main():
    file_path = "student_records.txt"
    reader = StudentRecordsReader(file_path)
    reader.open_file()
    records = reader.get_all_records()
    reader.close_file()

# Sorting student record by student number
    records.sort(key=lambda x: x.student_number)

    print("STUDENT DATA\n")                # The header
    print("STUDENT NO.\tLAST NAME\tFIRST NAME\tGENDER\tMARK\tOBTAINED LEVEL")
    print("-" * 80)
    for record in records:
        record.print_record()
    print("-" * 80)
    print(f"Total number of students: {len(records)}")


if __name__ == "__main__":
    main()
